[
["index.html", "Trajectory differential expression benchmark | Contributors guide Overview", " Trajectory differential expression benchmark | Contributors guide 2018-11-08 Overview Welcome to the contributors guide for the benchmark on trajectory differential expression methods. Here, we discuss how the benchmark is organised and how it can be extended. This source for this guide is available at https://github.com/komparo/tde/tree/devel/docs. "],
["formats.html", "1 Formats ", " 1 Formats "],
["datasets.html", "1.1 Datasets", " 1.1 Datasets 1.1.1 gene_expression.csv ## Warning: Missing column names filled in: &#39;X1&#39; [1] G1 G2 G3 G4 C1 0 1 2 3 C2 2 3 4 5 C3 5 6 7 8 "],
["trajectory-differential-expression.html", "1.2 Trajectory differential expression", " 1.2 Trajectory differential expression Differential expression results are represented as a table, where each differential expression event is one row. Within a trajectory, there are different possible types of differential expression, ranging from “overall” differential expression anywhere in the trajectory, to very specific types such as Each type of differential expression always contain the following columns: feature_id: Subset of features from the original datasets At least one of: significant: \\(\\{\\textrm{TRUE}, \\textrm{FALSE}\\}\\) p_value: \\(0 \\leq \\textrm{p_value} \\leq 1\\) effect_size rank: \\(1 \\leq \\textrm{rank} \\leq n\\) Any other columns are also allowed. If this column contains some commonly used type of data, feel free to add it to this list. 1.2.1 tde_overall.csv: Overall differential expression Overall trajectory differential expression indicates that the feature is changing somewhere along the trajectory. feature_id significant effect_size p_value rank G1 TRUE 1.0 0.050 2 G2 FALSE 0.2 0.250 3 G3 TRUE 2.5 0.001 1 1.2.2 tde_local.csv: Local differential expression Local trajectory differential expression provides information on exactly where the expression of a feature changes. Columns: branch_id: The milestone at the tip point progression_percentage: The location within the branch at which the expression changes No duplicated feature_id, branch_id, and progression_percentages combinations are allowed. 1.2.3 tde_tip_point.csv: Tip point differential expression Tip point trajectory differential expression indicates that a feature is differentially expressed at a tip point, either upward or downward, compared to other locations in the trajectory. A feature can be differentially expressed at multiple tip points. Columns: milestone_id: The milestone at the tip point No duplicated feature_id and milestone_id combinations are allowed. feature_id milestone_id significant effect_size p_value rank G1 M1 TRUE 1.0 0.050 2 G2 M2 FALSE 0.2 0.250 3 G3 M3 TRUE 2.5 0.001 1 G3 M1 TRUE 2.5 0.001 1 1.2.4 tde_branch_point.csv: Branch point differential expression milestone_id: The milestone at the branch point No duplicated feature_id and milestone_id combinations are allowed. 1.2.5 tde_branch.csv: Branch differential expression branch_id: The branch_id from the milestone_network No duplicated feature_id and branch_id combinations are allowed. 1.2.6 tde_pseudotime.csv: Pseudotime differential expression turning_point: The pseudotime value at which the expression changed No duplicated feature_id and turning_point values are allowed. 1.2.7 tde_oscilating.csv: Oscillatory differential expression turning_point: The pseudotime value at which the expression changed. Each feature_id requires an even number of rows. No duplicated feature_id and turning_point values are allowed. "],
["scores.html", "1.3 Scores", " 1.3 Scores The format of scores is more free: [ { &quot;id&quot;: &quot;accuracy&quot;, &quot;value&quot;: 0.5 }, { &quot;id&quot;: &quot;&quot; } ] "],
["modules.html", "2 Modules", " 2 Modules A module can be anything that creates a predefined set of output files, optionally based on some input files. In this benchmark, we define four types of modules: dataset generators, methods, metrics and report generators. Each module type has common (but not necessarely exactly the same) input and output, which is discussed later in the Module types section. A module is more than just code that generates some output. Each module is connected to a set of tools which make them portable, robust and reproducible: "],
["code.html", "2.1 Code", " 2.1 Code "],
["portable-environment.html", "2.2 Portable environment: ", " 2.2 Portable environment: "],
["metadata.html", "2.3 Metadata", " 2.3 Metadata The meta.yml file is a YAML file containing some essential metadata on the module. Two fields are required: List of authors, containing: name contributions: One or more values from the CRediT taxonomy. orcid: See https://orcid.org/ github: Recommended mail: Recommended The license of the code within the module (not including any packages or ) "],
["pipeline-manager-certigo.html", "2.4 Pipeline manager (certigo)", " 2.4 Pipeline manager (certigo) "],
["version-control.html", "2.5 Version control: ", " 2.5 Version control: "],
["code-sharing.html", "2.6 Code sharing: ", " 2.6 Code sharing: "],
["automated-testing-and-continuous-integration.html", "2.7 Automated testing and continuous integration: ", " 2.7 Automated testing and continuous integration: Add github pattern (so that devtools install github does not hit the request limits) travis encrypt GITHUB_PAT=... --add env.global "],
["environment-registry.html", "2.8 Environment registry: ", " 2.8 Environment registry: To push the docker container to dockerhub, travis needs to know how to login. dockerhub username and password (encrypted) travis encrypt DOCKERHUB_USERNAME=... --add env.global travis encrypt DOCKERHUB_PASSWORD=... --add env.global "],
["module-types.html", "3 Module types ", " 3 Module types "],
["dataset-generator.html", "3.1 Dataset generator", " 3.1 Dataset generator "],
["method.html", "3.2 Method", " 3.2 Method "],
["metric.html", "3.3 Metric", " 3.3 Metric "],
["report-generator.html", "3.4 Report generator", " 3.4 Report generator "],
["custom.html", "3.5 Custom", " 3.5 Custom "],
["benchmark.html", "4 Benchmark ", " 4 Benchmark "],
["adding-or-updating-a-module.html", "4.1 Adding or updating a module", " 4.1 Adding or updating a module Each module is included in the benchmark repository as a git submodule. This module is fixed at a particular commit (example). Adding a submodule REMOTE=git@… SUBMODULE_PATH=modules/… git submodule init $REMOTE $SUBMODULE_PATH Updating a module is currently not so straightforward as I would like: # first clone the repository git clone https://github.com/komparo/tde.git cd tde # init the submodule, update it and pull the latest version SUBMODULE_PATH=… git submodule init git submodule update $SUBMODULE_PATH pushd $SUBMODULE_PATH git pull popd # commit the new pointer to the submodule git add $SUBMODULE_PATH git commit -m &quot;updated submodule&quot; "],
["cookbook.html", "4.2 Cookbook", " 4.2 Cookbook Some common commands when adding and changing things in the benchmark 4.2.1 Rename submodule To move to different directory FROM=… TO=… git mv $FROM $TO To change remote Edit remote in .gitmodules git submodule sync git add .gitmodules and git commit "]
]
